/* Desktop, Tablet, and Mobile */
@mixin desktop-down { @media only screen and (max-width: $breakpoint-desktop) { @content; } }

/* Desktop and Widescreen */
@mixin desktop-up { @media only screen and (min-width: $breakpoint-tablet + 1) { @content; } }

/* Tablet and Mobile */
@mixin tablet-down { @media only screen and (max-width: $breakpoint-tablet) { @content; } }

/* Tablet, Desktop, and Widescreen */
@mixin tablet-up { @media only screen and (min-width: $breakpoint-mobile + 1) { @content; } }

/* Responsive Only Views */
@mixin mobile-only { @media only screen and (max-width: $breakpoint-mobile) { @content; } }

@mixin tablet-only { @media only screen and (min-width: $breakpoint-mobile + 1) and (max-width: $breakpoint-tablet) { @content; } }

@mixin desktop-only { @media only screen and (min-width: $breakpoint-tablet + 1) and (max-width: $breakpoint-desktop) { @content; } }

@mixin widescreen-only { @media only screen and (min-width: $breakpoint-desktop + 1) { @content; } }

/*
* Responsive property mixin
* Includes mobile, tablet, and desktop up views (null is valid)
    @include responsive(padding,
        map-get($sizes, 9) map-get($sizes, 3),
        map-get($sizes, 9) map-get($sizes, 5),
        map-get($sizes, 10) map-get($sizes, 3),
    );
*/
@mixin responsive($property, $mobile: null, $tablet: null, $desktop: null) {
    @if $mobile {
        @include mobile-only {
            #{$property}: #{$mobile};
        }
    }

    @if $tablet {
        @include tablet-only {
            #{$property}: #{$tablet};
        }
    }

    @if $desktop {
        @include desktop-up {
            #{$property}: #{$desktop};
        }
    }
}